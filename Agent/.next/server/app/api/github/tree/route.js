/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/github/tree/route";
exports.ids = ["app/api/github/tree/route"];
exports.modules = {

/***/ "(rsc)/./app/api/github/tree/route.ts":
/*!**************************************!*\
  !*** ./app/api/github/tree/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/api/server.js\");\n\nasync function GET(req) {\n    try {\n        const url = req.nextUrl.searchParams.get(\"url\");\n        if (!url) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Missing url\"\n        }, {\n            status: 400\n        });\n        const { owner, repo, branch } = parseGitHubUrl(url);\n        const token = req.headers.get(\"x-github-token\") || process.env.GITHUB_TOKEN || \"\";\n        const headers = {\n            Accept: \"application/vnd.github+json\",\n            \"User-Agent\": \"v0-code-explainer\"\n        };\n        if (token) headers.Authorization = `Bearer ${token}`;\n        const repoRes = await fetch(`https://api.github.com/repos/${owner}/${repo}`, {\n            headers\n        });\n        if (!repoRes.ok) {\n            const body = await safeJson(repoRes);\n            const message = body?.message || `Repo not found or API error (${repoRes.status})`;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: message,\n                status: repoRes.status\n            }, {\n                status: repoRes.status\n            });\n        }\n        const repoData = await repoRes.json();\n        const defaultBranch = branch || repoData.default_branch || \"main\";\n        const treeRes = await fetch(`https://api.github.com/repos/${owner}/${repo}/git/trees/${encodeURIComponent(defaultBranch)}?recursive=1`, {\n            headers\n        });\n        if (!treeRes.ok) {\n            const body = await safeJson(treeRes);\n            const message = body?.message || `Tree fetch failed (${treeRes.status})`;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: message,\n                status: treeRes.status\n            }, {\n                status: treeRes.status\n            });\n        }\n        const treeData = await treeRes.json();\n        const items = treeData.tree || [];\n        const nodes = buildTree(items);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            owner,\n            repo,\n            branch: defaultBranch,\n            tree: nodes\n        });\n    } catch (err) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: err?.message || \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction parseGitHubUrl(input) {\n    try {\n        const u = new URL(input);\n        if (u.hostname !== \"github.com\") throw new Error(\"Not a GitHub URL\");\n        const parts = u.pathname.replace(/^\\/+|\\/+$/g, \"\").split(\"/\");\n        const owner = parts[0];\n        const repo = (parts[1] || \"\").replace(/\\.git$/, \"\");\n        let branch;\n        const treeIdx = parts.indexOf(\"tree\");\n        if (treeIdx >= 0 && parts[treeIdx + 1]) {\n            branch = parts[treeIdx + 1];\n        }\n        if (!owner || !repo) throw new Error(\"Invalid GitHub repo URL\");\n        return {\n            owner,\n            repo,\n            branch\n        };\n    } catch  {\n        // fallback for owner/repo input\n        const cleaned = input.replace(/^https?:\\/\\/|git@github\\.com:|\\.git$/g, \"\");\n        const parts = cleaned.split(\"/\");\n        if (parts.length >= 2) return {\n            owner: parts[0],\n            repo: parts[1]\n        };\n        throw new Error(\"Invalid GitHub URL\");\n    }\n}\nfunction buildTree(items) {\n    const root = {};\n    for (const item of items){\n        const segments = item.path.split(\"/\");\n        let current = root;\n        for(let i = 0; i < segments.length; i++){\n            const seg = segments[i];\n            const isLast = i === segments.length - 1;\n            if (!current[seg]) {\n                current[seg] = {\n                    name: seg,\n                    path: segments.slice(0, i + 1).join(\"/\"),\n                    type: isLast ? item.type === \"blob\" ? \"file\" : \"dir\" : \"dir\",\n                    children: {}\n                };\n            }\n            current = current[seg].children;\n        }\n    }\n    const toArray = (nodeMap)=>Object.values(nodeMap).map((n)=>({\n                name: n.name,\n                path: n.path,\n                type: n.type,\n                children: n.type === \"dir\" ? toArray(n.children) : undefined\n            })).sort((a, b)=>{\n            if (a.type !== b.type) return a.type === \"dir\" ? -1 : 1;\n            return a.name.localeCompare(b.name);\n        });\n    return toArray(root);\n}\nasync function safeJson(res) {\n    try {\n        return await res.json();\n    } catch  {\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/github/tree/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgithub%2Ftree%2Froute&page=%2Fapi%2Fgithub%2Ftree%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftree%2Froute.ts&appDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgithub%2Ftree%2Froute&page=%2Fapi%2Fgithub%2Ftree%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftree%2Froute.ts&appDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Pankaj_s_Space_Projects_code_explainer_2_app_api_github_tree_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/github/tree/route.ts */ \"(rsc)/./app/api/github/tree/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/github/tree/route\",\n        pathname: \"/api/github/tree\",\n        filename: \"route\",\n        bundlePath: \"app/api/github/tree/route\"\n    },\n    resolvedPagePath: \"C:\\\\Pankaj's Space\\\\Projects\\\\code-explainer (2)\\\\app\\\\api\\\\github\\\\tree\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Pankaj_s_Space_Projects_code_explainer_2_app_api_github_tree_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4yLjRfQG9wZW50ZWxlbWV0cnkrXzQyY2VhOTFkYWJlNTk5YjYxZWU4ZWM0NTM3NGE4ZDlmL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtYXBwLWxvYWRlci9pbmRleC5qcz9uYW1lPWFwcCUyRmFwaSUyRmdpdGh1YiUyRnRyZWUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdpdGh1YiUyRnRyZWUlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnaXRodWIlMkZ0cmVlJTJGcm91dGUudHMmYXBwRGlyPUMlM0ElNUNQYW5rYWoncyUyMFNwYWNlJTVDUHJvamVjdHMlNUNjb2RlLWV4cGxhaW5lciUyMCgyKSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1BhbmthaidzJTIwU3BhY2UlNUNQcm9qZWN0cyU1Q2NvZGUtZXhwbGFpbmVyJTIwKDIpJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcUGFua2FqJ3MgU3BhY2VcXFxcUHJvamVjdHNcXFxcY29kZS1leHBsYWluZXIgKDIpXFxcXGFwcFxcXFxhcGlcXFxcZ2l0aHViXFxcXHRyZWVcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dpdGh1Yi90cmVlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2l0aHViL3RyZWVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2dpdGh1Yi90cmVlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcUGFua2FqJ3MgU3BhY2VcXFxcUHJvamVjdHNcXFxcY29kZS1leHBsYWluZXIgKDIpXFxcXGFwcFxcXFxhcGlcXFxcZ2l0aHViXFxcXHRyZWVcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgithub%2Ftree%2Froute&page=%2Fapi%2Fgithub%2Ftree%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftree%2Froute.ts&appDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f","vendor-chunks/@opentelemetry+api@1.9.0"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.2.4_@opentelemetry+_42cea91dabe599b61ee8ec45374a8d9f/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgithub%2Ftree%2Froute&page=%2Fapi%2Fgithub%2Ftree%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgithub%2Ftree%2Froute.ts&appDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CPankaj's%20Space%5CProjects%5Ccode-explainer%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();